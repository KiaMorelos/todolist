const form = document.querySelector('form');

const addToDo = document.getElementById('addToDo');

const theList = document.querySelector('ul');

let num = 0;

//get the stuff i saved to local storage back on the page
let allDos = JSON.parse(localStorage.getItem("allDos")) || [];
//above contains an array [{that contains objects}] or an empty array if nothing has been stored.

for(let prop in allDos){
    let newToDo = document.createElement('li');
    newToDo.hasBeenDone = allDos[prop].hasBeenDone ? true : false;
    identifier = allDos[prop].identifier
    newToDo.setAttribute("id", `${identifier}`)
    newToDo.innerText = allDos[prop].do;
    hasBeenDone = allDos[prop].hasBeenDone
   
   let deleteBtn = document.createElement('button');
   deleteBtn.innerText = "Delete To Do";
  
   if(newToDo.hasBeenDone){
    newToDo.classList.add('done');
   } else {
    newToDo.classList.add('undone');
   }
   newToDo.appendChild(deleteBtn)
   theList.prepend(newToDo); 
}

//add to do do and buttons to the ul
form.addEventListener('submit', function(evt){
    
    //empty input = no
    evt.preventDefault();
    if(!addToDo.value){
          return alert("Please type something in the Add a to Do Field - Thanks!")
      }
      num++
      let newId = `a${num}`

    //push object to array, then save to localStorage
    allDos.push({identifier: newId, do: addToDo.value, hasBeenDone: false })
    localStorage.setItem("allDos", JSON.stringify(allDos))

   //add to the list 
        let newToDo = document.createElement('li');
        newToDo.setAttribute("id", `${newId}`)
       
        newToDo.innerText = addToDo.value;

       let deleteBtn = document.createElement('button');
       deleteBtn.innerText = "Delete To Do";
      
       newToDo.classList.add('undone');
       newToDo.appendChild(deleteBtn)
       theList.prepend(newToDo); 
       form.reset();
});


theList.addEventListener('click', function(evt){

    // delete to dos 

    if(evt.target.tagName === 'BUTTON'){
        let thisOne = evt.target.parentElement.getAttribute("id")
        evt.target.parentElement.remove();
        
        allDos = JSON.parse(localStorage.getItem("allDos"))
        
        let findIt = allDos.filter(id => id.identifier !== thisOne)
        
        localStorage.setItem("allDos", JSON.stringify(findIt));
        console.log(findIt)
     }

    // mark as done or undone
    let marked = evt.target;

    if(!marked.hasBeenDone){
        evt.target.classList.remove('undone');
        evt.target.classList.add('done');
        marked.hasBeenDone = true;

    } else {
        evt.target.classList.remove('done');
        evt.target.classList.add('undone');
        marked.hasBeenDone = false;

            }
   for (let prop in allDos) {
          
    if (allDos[prop].do === marked.innerText) {  
        allDos[prop].hasBeenDone = !allDos[prop].hasBeenDone;
        localStorage.setItem("allDos", JSON.stringify(allDos));
      }
                
       } 
     });

  


   
